- Para adicionar um item vamos precisar regatas os dados do form com o useState;
- Reunir eles em uma função após o submit e enviar um request de POST para a API;


Para adicionar dados a uma API usando React, você pode usar a função fetch ou bibliotecas como Axios para enviar uma requisição HTTP POST com os dados desejados. Vou te mostrar como fazer isso usando ambos os métodos. Primeiro, vou demonstrar usando fetch e depois usando Axios.

Usando fetch
Aqui está um exemplo de como adicionar dados a uma API usando fetch:

Crie um componente para adicionar dados:
Vamos criar um componente chamado AddDataForm que terá um formulário para adicionar dados.


// src/AddDataForm.js
import React, { useState } from 'react';

const AddDataForm = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    const data = { name, email };

    try {
      const response = await fetch('https://api.example.com/data', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        const result = await response.json();
        console.log('Data added successfully:', result);
      } else {
        console.error('Failed to add data');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Name:
        <input
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
      </label>
      <br />
      <label>
        Email:
        <input
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />
      </label>
      <br />
      <button type="submit">Add Data</button>
    </form>
  );
};

export default AddDataForm;

Inclua o componente no seu aplicativo:


// src/App.js
import React from 'react';
import AddDataForm from './AddDataForm';

const App = () => {
  return (
    <div>
      <h1>Add Data to API</h1>
      <AddDataForm />
    </div>
  );
};

export default App;

Usando Axios
Para usar Axios, você precisa instalá-lo primeiro e depois fazer a requisição POST de forma semelhante.

Instale o Axios:
npm install axios

Crie um componente para adicionar dados usando Axios:


// src/AddDataFormAxios.js
import React, { useState } from 'react';
import axios from 'axios';

const AddDataFormAxios = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    const data = { name, email };

    try {
      const response = await axios.post('https://api.example.com/data', data, {
        headers: {
          'Content-Type': 'application/json',
        },
      });

      console.log('Data added successfully:', response.data);
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Name:
        <input
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
        />
      </label>
      <br />
      <label>
        Email:
        <input
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />
      </label>
      <br />
      <button type="submit">Add Data</button>
    </form>
  );
};

export default AddDataFormAxios;

Inclua o componente no seu aplicativo:

// src/App.js
import React from 'react';
import AddDataFormAxios from './AddDataFormAxios';

const App = () => {
  return (
    <div>
      <h1>Add Data to API with Axios</h1>
      <AddDataFormAxios />
    </div>
  );
};

export default App;

Considerações Finais
Substitua 'https://api.example.com/data' pela URL da sua API.
Adicione tratamento de erros e feedback ao usuário conforme necessário.
Verifique a documentação da sua API para requisitos específicos de cabeçalhos ou formatação de dados.